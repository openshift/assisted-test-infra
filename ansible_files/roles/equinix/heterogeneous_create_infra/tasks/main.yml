- name: Wait for instance 
  include_tasks:  wait_for_instance.yaml

- name: "Save terraform variables into {{ equinix_tf_vars_file }}"
  ansible.builtin.template:
    src: "terraform.tfvars.j2"
    dest: "{{ equinix_tf_vars_file }}"
    mode: 0644

- name: "Deploy Terraform Instance"
  community.general.terraform:
    project_path: "{{ terraform_equinix_workdir }}"
    state: present
    force_init: true
    variables_files:
      - "{{ equinix_tf_vars_file }}"
  register: deployed_tf
  environment:
    METAL_AUTH_TOKEN: "{{ equinix_auth_token }}"

- name: "Add created devices to inventory"
  ansible.builtin.add_host:
    name: "{{ item.hostname }}"
    ansible_host: "{{ item.access_public_ipv4 }}"
    ansible_user: "{{ equinix_ssh_user }}"
    ansible_ssh_private_key_file: "{{ equinix_ssh_private_key_path }}"
    groups: "{{ item.tags }}"
    access_public_ipv4: "{{ item.access_public_ipv4 }}"
    access_private_ipv4: "{{ item.access_private_ipv4 }}"
  loop: "{{ deployed_tf.outputs.inventory.value }}"

- name: "Save Terraform state file in {{ equinix_tf_state_file }}"
  ansible.builtin.copy:
    src: "{{ terraform_equinix_workdir }}/terraform.tfstate"
    dest: "{{ equinix_tf_state_file }}"
    mode: 0644
  when: equinix_tf_state_file is defined
